// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Agree.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Agree.proto</summary>
public static partial class AgreeReflection {

  #region Descriptor
  /// <summary>File descriptor for Agree.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AgreeReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgtBZ3JlZS5wcm90byKBAQoFQWdyZWUSEQoJYWdyZWVfbnVtGAEgASgDEhEK",
          "CWhhc19hZ3JlZRgCIAEoBRISCgphZ3JlZV90eXBlGAMgASgFEhQKDGRpc2Fn",
          "cmVlX251bRgEIAEoAxIWCg5kaWZmX2FncmVlX251bRgFIAEoAxIQCghsel9h",
          "Z3JlZRgGIAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Agree), global::Agree.Parser, new[]{ "AgreeNum", "HasAgree", "AgreeType", "DisagreeNum", "DiffAgreeNum", "LzAgree" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
[global::System.SerializableAttribute]
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class Agree : pb::IMessage<Agree>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Agree> _parser = new pb::MessageParser<Agree>(() => new Agree());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Agree> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AgreeReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Agree() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Agree(Agree other) : this() {
    agreeNum_ = other.agreeNum_;
    hasAgree_ = other.hasAgree_;
    agreeType_ = other.agreeType_;
    disagreeNum_ = other.disagreeNum_;
    diffAgreeNum_ = other.diffAgreeNum_;
    lzAgree_ = other.lzAgree_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Agree Clone() {
    return new Agree(this);
  }

  /// <summary>Field number for the "agree_num" field.</summary>
  public const int AgreeNumFieldNumber = 1;
  private long agreeNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long AgreeNum {
    get { return agreeNum_; }
    set {
      agreeNum_ = value;
    }
  }

  /// <summary>Field number for the "has_agree" field.</summary>
  public const int HasAgreeFieldNumber = 2;
  private int hasAgree_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int HasAgree {
    get { return hasAgree_; }
    set {
      hasAgree_ = value;
    }
  }

  /// <summary>Field number for the "agree_type" field.</summary>
  public const int AgreeTypeFieldNumber = 3;
  private int agreeType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int AgreeType {
    get { return agreeType_; }
    set {
      agreeType_ = value;
    }
  }

  /// <summary>Field number for the "disagree_num" field.</summary>
  public const int DisagreeNumFieldNumber = 4;
  private long disagreeNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long DisagreeNum {
    get { return disagreeNum_; }
    set {
      disagreeNum_ = value;
    }
  }

  /// <summary>Field number for the "diff_agree_num" field.</summary>
  public const int DiffAgreeNumFieldNumber = 5;
  private long diffAgreeNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long DiffAgreeNum {
    get { return diffAgreeNum_; }
    set {
      diffAgreeNum_ = value;
    }
  }

  /// <summary>Field number for the "lz_agree" field.</summary>
  public const int LzAgreeFieldNumber = 6;
  private int lzAgree_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int LzAgree {
    get { return lzAgree_; }
    set {
      lzAgree_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Agree);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Agree other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AgreeNum != other.AgreeNum) return false;
    if (HasAgree != other.HasAgree) return false;
    if (AgreeType != other.AgreeType) return false;
    if (DisagreeNum != other.DisagreeNum) return false;
    if (DiffAgreeNum != other.DiffAgreeNum) return false;
    if (LzAgree != other.LzAgree) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (AgreeNum != 0L) hash ^= AgreeNum.GetHashCode();
    if (HasAgree != 0) hash ^= HasAgree.GetHashCode();
    if (AgreeType != 0) hash ^= AgreeType.GetHashCode();
    if (DisagreeNum != 0L) hash ^= DisagreeNum.GetHashCode();
    if (DiffAgreeNum != 0L) hash ^= DiffAgreeNum.GetHashCode();
    if (LzAgree != 0) hash ^= LzAgree.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (AgreeNum != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(AgreeNum);
    }
    if (HasAgree != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(HasAgree);
    }
    if (AgreeType != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AgreeType);
    }
    if (DisagreeNum != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(DisagreeNum);
    }
    if (DiffAgreeNum != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(DiffAgreeNum);
    }
    if (LzAgree != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(LzAgree);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (AgreeNum != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(AgreeNum);
    }
    if (HasAgree != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(HasAgree);
    }
    if (AgreeType != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AgreeType);
    }
    if (DisagreeNum != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(DisagreeNum);
    }
    if (DiffAgreeNum != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(DiffAgreeNum);
    }
    if (LzAgree != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(LzAgree);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (AgreeNum != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgreeNum);
    }
    if (HasAgree != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(HasAgree);
    }
    if (AgreeType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgreeType);
    }
    if (DisagreeNum != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(DisagreeNum);
    }
    if (DiffAgreeNum != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiffAgreeNum);
    }
    if (LzAgree != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LzAgree);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Agree other) {
    if (other == null) {
      return;
    }
    if (other.AgreeNum != 0L) {
      AgreeNum = other.AgreeNum;
    }
    if (other.HasAgree != 0) {
      HasAgree = other.HasAgree;
    }
    if (other.AgreeType != 0) {
      AgreeType = other.AgreeType;
    }
    if (other.DisagreeNum != 0L) {
      DisagreeNum = other.DisagreeNum;
    }
    if (other.DiffAgreeNum != 0L) {
      DiffAgreeNum = other.DiffAgreeNum;
    }
    if (other.LzAgree != 0) {
      LzAgree = other.LzAgree;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AgreeNum = input.ReadInt64();
          break;
        }
        case 16: {
          HasAgree = input.ReadInt32();
          break;
        }
        case 24: {
          AgreeType = input.ReadInt32();
          break;
        }
        case 32: {
          DisagreeNum = input.ReadInt64();
          break;
        }
        case 40: {
          DiffAgreeNum = input.ReadInt64();
          break;
        }
        case 48: {
          LzAgree = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AgreeNum = input.ReadInt64();
          break;
        }
        case 16: {
          HasAgree = input.ReadInt32();
          break;
        }
        case 24: {
          AgreeType = input.ReadInt32();
          break;
        }
        case 32: {
          DisagreeNum = input.ReadInt64();
          break;
        }
        case 40: {
          DiffAgreeNum = input.ReadInt64();
          break;
        }
        case 48: {
          LzAgree = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
