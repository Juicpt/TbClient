// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CommonReq.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from CommonReq.proto</summary>
public static partial class CommonReqReflection {

  #region Descriptor
  /// <summary>File descriptor for CommonReq.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CommonReqReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9Db21tb25SZXEucHJvdG8iqAsKCUNvbW1vblJlcRIUCgxfY2xpZW50X3R5",
          "cGUYASABKAUSFwoPX2NsaWVudF92ZXJzaW9uGAIgASgJEhIKCl9jbGllbnRf",
          "aWQYAyABKAkSDAoEYXBpZBgEIAEoCRITCgtfcGhvbmVfaW1laRgFIAEoCRIM",
          "CgRmcm9tGAYgASgJEgwKBGN1aWQYByABKAkSEgoKX3RpbWVzdGFtcBgIIAEo",
          "AxINCgVtb2RlbBgJIAEoCRINCgVCRFVTUxgKIAEoCRILCgN0YnMYCyABKAkS",
          "EAoIbmV0X3R5cGUYDCABKAUSEwoLc3ViYXBwX3R5cGUYDSABKAkSFgoOX3Bo",
          "b25lX25ld2ltZWkYDiABKAkSCgoCa2EYDyABKAkSDQoFbV9hcGkYECABKAkS",
          "DwoHbV9sb2dpZBgRIAEoCRIOCgZtX2Nvc3QYEiABKAkSEAoIbV9yZXN1bHQY",
          "EyABKAkSEAoIbV9zaXplX3UYFCABKAkSEAoIbV9zaXplX2QYFSABKAkSEQoJ",
          "c21hbGxmbG93GBYgASgJEgwKBHNpZ24YFyABKAkSEAoIcHZlcnNpb24YGCAB",
          "KAkSEwoLX29zX3ZlcnNpb24YGSABKAkSDQoFYnJhbmQYGiABKAkSEgoKYnJh",
          "bmRfdHlwZRgbIAEoCRIYChBsZWdvX2xpYl92ZXJzaW9uGBwgASgJEg8KB2Fw",
          "cGxpc3QYHSABKAkSDgoGc3Rva2VuGB4gASgJEgwKBHpfaWQYHyABKAkSFAoM",
          "Y3VpZF9nYWxheHkyGCAgASgJEhAKCGN1aWRfZ2lkGCEgASgJEgwKBG9haWQY",
          "IiABKAkSDgoGYzNfYWlkGCMgASgJEhEKCXNhbXBsZV9pZBgkIAEoCRINCgVz",
          "Y3JfdxglIAEoBRINCgVzY3JfaBgmIAEoBRIPCgdzY3JfZGlwGCcgASgBEg4K",
          "BnFfdHlwZRgoIAEoBRITCgtpc190ZWVuYWdlchgpIAEoBRIPCgdzZGtfdmVy",
          "GCogASgJEhUKDWZyYW1ld29ya192ZXIYKyABKAkSFQoNbmF3c19nYW1lX3Zl",
          "chgsIAEoCRIMCgRpZGZhGC0gASgJEgwKBGRpYWMYLiABKAkSGAoQYWN0aXZl",
          "X3RpbWVzdGFtcBgxIAEoAxIaChJmaXJzdF9pbnN0YWxsX3RpbWUYMiABKAMS",
          "GAoQbGFzdF91cGRhdGVfdGltZRgzIAEoAxIRCglldmVudF9kYXkYNSABKAkS",
          "EgoKYW5kcm9pZF9pZBg2IAEoCRINCgVjbW9kZRg3IAEoBRIUCgxzdGFydF9z",
          "Y2hlbWUYOCABKAkSEgoKc3RhcnRfdHlwZRg5IAEoBRIUCgxzaG91YmFpX2N1",
          "aWQYOiABKAkSCwoDbWFjGDsgASgJEgwKBGlkZnYYPCABKAkSDQoFZXh0cmEY",
          "PSABKAkSEgoKdXNlcl9hZ2VudBg+IAEoCRIfChdwZXJzb25hbGl6ZWRfcmVj",
          "X3N3aXRjaBg/IAEoBRIMCgRpZW1pGEAgASgJEg8KB2llbWl3ZW4YQSABKAkS",
          "CwoDY2FtGEIgASgJEgwKBGFmZGkYQyABKAkSEgoKZGlfZGlvcmRuYRhEIAEo",
          "CRIMCgR2ZmRpGEUgASgJEhQKDGRldmljZV9zY29yZRhGIAEoCRIRCglwdXJl",
          "X21vZGUYRyABKAUSEAoIeGN4X21vZGUYSCABKAUSDQoFbGVkb20YSSABKAkS",
          "DAoEZGlhbxhKIAEoCRISCgpub2lzcmV2X3NvGEsgASgJEg0KBWRuYXJiGEwg",
          "ASgJEhIKCmVweXRfZG5hcmIYTSABKAkSDQoFd19yY3MYTiABKAkSDQoFaF9y",
          "Y3MYTyABKAkSDwoHcGlkX3JjcxhQIAEoCRIUCgxuZWVkX2RlY3J5cHQYUSAB",
          "KAUSGAoQbmVlZF9jYW1fZGVjcnlwdBhSIAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CommonReq), global::CommonReq.Parser, new[]{ "ClientType", "ClientVersion", "ClientId", "Apid", "PhoneImei", "From", "Cuid", "Timestamp", "Model", "BDUSS", "Tbs", "NetType", "SubappType", "PhoneNewimei", "Ka", "MApi", "MLogid", "MCost", "MResult", "MSizeU", "MSizeD", "Smallflow", "Sign", "Pversion", "OsVersion", "Brand", "BrandType", "LegoLibVersion", "Applist", "Stoken", "ZId", "CuidGalaxy2", "CuidGid", "Oaid", "C3Aid", "SampleId", "ScrW", "ScrH", "ScrDip", "QType", "IsTeenager", "SdkVer", "FrameworkVer", "NawsGameVer", "Idfa", "Diac", "ActiveTimestamp", "FirstInstallTime", "LastUpdateTime", "EventDay", "AndroidId", "Cmode", "StartScheme", "StartType", "ShoubaiCuid", "Mac", "Idfv", "Extra", "UserAgent", "PersonalizedRecSwitch", "Iemi", "Iemiwen", "Cam", "Afdi", "DiDiordna", "Vfdi", "DeviceScore", "PureMode", "XcxMode", "Ledom", "Diao", "NoisrevSo", "Dnarb", "EpytDnarb", "WRcs", "HRcs", "PidRcs", "NeedDecrypt", "NeedCamDecrypt" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
[global::System.SerializableAttribute]
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CommonReq : pb::IMessage<CommonReq>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CommonReq> _parser = new pb::MessageParser<CommonReq>(() => new CommonReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CommonReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReqReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CommonReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CommonReq(CommonReq other) : this() {
    ClientType_ = other.ClientType_;
    ClientVersion_ = other.ClientVersion_;
    ClientId_ = other.ClientId_;
    apid_ = other.apid_;
    PhoneImei_ = other.PhoneImei_;
    from_ = other.from_;
    cuid_ = other.cuid_;
    Timestamp_ = other.Timestamp_;
    model_ = other.model_;
    bDUSS_ = other.bDUSS_;
    tbs_ = other.tbs_;
    netType_ = other.netType_;
    subappType_ = other.subappType_;
    PhoneNewimei_ = other.PhoneNewimei_;
    ka_ = other.ka_;
    mApi_ = other.mApi_;
    mLogid_ = other.mLogid_;
    mCost_ = other.mCost_;
    mResult_ = other.mResult_;
    mSizeU_ = other.mSizeU_;
    mSizeD_ = other.mSizeD_;
    smallflow_ = other.smallflow_;
    sign_ = other.sign_;
    pversion_ = other.pversion_;
    OsVersion_ = other.OsVersion_;
    brand_ = other.brand_;
    brandType_ = other.brandType_;
    legoLibVersion_ = other.legoLibVersion_;
    applist_ = other.applist_;
    stoken_ = other.stoken_;
    zId_ = other.zId_;
    cuidGalaxy2_ = other.cuidGalaxy2_;
    cuidGid_ = other.cuidGid_;
    oaid_ = other.oaid_;
    c3Aid_ = other.c3Aid_;
    sampleId_ = other.sampleId_;
    scrW_ = other.scrW_;
    scrH_ = other.scrH_;
    scrDip_ = other.scrDip_;
    qType_ = other.qType_;
    isTeenager_ = other.isTeenager_;
    sdkVer_ = other.sdkVer_;
    frameworkVer_ = other.frameworkVer_;
    nawsGameVer_ = other.nawsGameVer_;
    idfa_ = other.idfa_;
    diac_ = other.diac_;
    activeTimestamp_ = other.activeTimestamp_;
    firstInstallTime_ = other.firstInstallTime_;
    lastUpdateTime_ = other.lastUpdateTime_;
    eventDay_ = other.eventDay_;
    androidId_ = other.androidId_;
    cmode_ = other.cmode_;
    startScheme_ = other.startScheme_;
    startType_ = other.startType_;
    shoubaiCuid_ = other.shoubaiCuid_;
    mac_ = other.mac_;
    idfv_ = other.idfv_;
    extra_ = other.extra_;
    userAgent_ = other.userAgent_;
    personalizedRecSwitch_ = other.personalizedRecSwitch_;
    iemi_ = other.iemi_;
    iemiwen_ = other.iemiwen_;
    cam_ = other.cam_;
    afdi_ = other.afdi_;
    diDiordna_ = other.diDiordna_;
    vfdi_ = other.vfdi_;
    deviceScore_ = other.deviceScore_;
    pureMode_ = other.pureMode_;
    xcxMode_ = other.xcxMode_;
    ledom_ = other.ledom_;
    diao_ = other.diao_;
    noisrevSo_ = other.noisrevSo_;
    dnarb_ = other.dnarb_;
    epytDnarb_ = other.epytDnarb_;
    wRcs_ = other.wRcs_;
    hRcs_ = other.hRcs_;
    pidRcs_ = other.pidRcs_;
    needDecrypt_ = other.needDecrypt_;
    needCamDecrypt_ = other.needCamDecrypt_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CommonReq Clone() {
    return new CommonReq(this);
  }

  /// <summary>Field number for the "_client_type" field.</summary>
  public const int ClientTypeFieldNumber = 1;
  private int ClientType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ClientType {
    get { return ClientType_; }
    set {
      ClientType_ = value;
    }
  }

  /// <summary>Field number for the "_client_version" field.</summary>
  public const int ClientVersionFieldNumber = 2;
  private string ClientVersion_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ClientVersion {
    get { return ClientVersion_; }
    set {
      ClientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "_client_id" field.</summary>
  public const int ClientIdFieldNumber = 3;
  private string ClientId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ClientId {
    get { return ClientId_; }
    set {
      ClientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "apid" field.</summary>
  public const int ApidFieldNumber = 4;
  private string apid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Apid {
    get { return apid_; }
    set {
      apid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "_phone_imei" field.</summary>
  public const int PhoneImeiFieldNumber = 5;
  private string PhoneImei_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PhoneImei {
    get { return PhoneImei_; }
    set {
      PhoneImei_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "from" field.</summary>
  public const int FromFieldNumber = 6;
  private string from_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string From {
    get { return from_; }
    set {
      from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cuid" field.</summary>
  public const int CuidFieldNumber = 7;
  private string cuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Cuid {
    get { return cuid_; }
    set {
      cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "_timestamp" field.</summary>
  public const int TimestampFieldNumber = 8;
  private long Timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Timestamp {
    get { return Timestamp_; }
    set {
      Timestamp_ = value;
    }
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 9;
  private string model_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "BDUSS" field.</summary>
  public const int BDUSSFieldNumber = 10;
  private string bDUSS_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string BDUSS {
    get { return bDUSS_; }
    set {
      bDUSS_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "tbs" field.</summary>
  public const int TbsFieldNumber = 11;
  private string tbs_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Tbs {
    get { return tbs_; }
    set {
      tbs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "net_type" field.</summary>
  public const int NetTypeFieldNumber = 12;
  private int netType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NetType {
    get { return netType_; }
    set {
      netType_ = value;
    }
  }

  /// <summary>Field number for the "subapp_type" field.</summary>
  public const int SubappTypeFieldNumber = 13;
  private string subappType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SubappType {
    get { return subappType_; }
    set {
      subappType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "_phone_newimei" field.</summary>
  public const int PhoneNewimeiFieldNumber = 14;
  private string PhoneNewimei_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PhoneNewimei {
    get { return PhoneNewimei_; }
    set {
      PhoneNewimei_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ka" field.</summary>
  public const int KaFieldNumber = 15;
  private string ka_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Ka {
    get { return ka_; }
    set {
      ka_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "m_api" field.</summary>
  public const int MApiFieldNumber = 16;
  private string mApi_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MApi {
    get { return mApi_; }
    set {
      mApi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "m_logid" field.</summary>
  public const int MLogidFieldNumber = 17;
  private string mLogid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MLogid {
    get { return mLogid_; }
    set {
      mLogid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "m_cost" field.</summary>
  public const int MCostFieldNumber = 18;
  private string mCost_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MCost {
    get { return mCost_; }
    set {
      mCost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "m_result" field.</summary>
  public const int MResultFieldNumber = 19;
  private string mResult_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MResult {
    get { return mResult_; }
    set {
      mResult_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "m_size_u" field.</summary>
  public const int MSizeUFieldNumber = 20;
  private string mSizeU_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MSizeU {
    get { return mSizeU_; }
    set {
      mSizeU_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "m_size_d" field.</summary>
  public const int MSizeDFieldNumber = 21;
  private string mSizeD_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MSizeD {
    get { return mSizeD_; }
    set {
      mSizeD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "smallflow" field.</summary>
  public const int SmallflowFieldNumber = 22;
  private string smallflow_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Smallflow {
    get { return smallflow_; }
    set {
      smallflow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sign" field.</summary>
  public const int SignFieldNumber = 23;
  private string sign_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Sign {
    get { return sign_; }
    set {
      sign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pversion" field.</summary>
  public const int PversionFieldNumber = 24;
  private string pversion_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Pversion {
    get { return pversion_; }
    set {
      pversion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "_os_version" field.</summary>
  public const int OsVersionFieldNumber = 25;
  private string OsVersion_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string OsVersion {
    get { return OsVersion_; }
    set {
      OsVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "brand" field.</summary>
  public const int BrandFieldNumber = 26;
  private string brand_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Brand {
    get { return brand_; }
    set {
      brand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "brand_type" field.</summary>
  public const int BrandTypeFieldNumber = 27;
  private string brandType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string BrandType {
    get { return brandType_; }
    set {
      brandType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "lego_lib_version" field.</summary>
  public const int LegoLibVersionFieldNumber = 28;
  private string legoLibVersion_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LegoLibVersion {
    get { return legoLibVersion_; }
    set {
      legoLibVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "applist" field.</summary>
  public const int ApplistFieldNumber = 29;
  private string applist_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Applist {
    get { return applist_; }
    set {
      applist_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "stoken" field.</summary>
  public const int StokenFieldNumber = 30;
  private string stoken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Stoken {
    get { return stoken_; }
    set {
      stoken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "z_id" field.</summary>
  public const int ZIdFieldNumber = 31;
  private string zId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ZId {
    get { return zId_; }
    set {
      zId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cuid_galaxy2" field.</summary>
  public const int CuidGalaxy2FieldNumber = 32;
  private string cuidGalaxy2_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CuidGalaxy2 {
    get { return cuidGalaxy2_; }
    set {
      cuidGalaxy2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cuid_gid" field.</summary>
  public const int CuidGidFieldNumber = 33;
  private string cuidGid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CuidGid {
    get { return cuidGid_; }
    set {
      cuidGid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "oaid" field.</summary>
  public const int OaidFieldNumber = 34;
  private string oaid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Oaid {
    get { return oaid_; }
    set {
      oaid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "c3_aid" field.</summary>
  public const int C3AidFieldNumber = 35;
  private string c3Aid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string C3Aid {
    get { return c3Aid_; }
    set {
      c3Aid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sample_id" field.</summary>
  public const int SampleIdFieldNumber = 36;
  private string sampleId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SampleId {
    get { return sampleId_; }
    set {
      sampleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "scr_w" field.</summary>
  public const int ScrWFieldNumber = 37;
  private int scrW_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ScrW {
    get { return scrW_; }
    set {
      scrW_ = value;
    }
  }

  /// <summary>Field number for the "scr_h" field.</summary>
  public const int ScrHFieldNumber = 38;
  private int scrH_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ScrH {
    get { return scrH_; }
    set {
      scrH_ = value;
    }
  }

  /// <summary>Field number for the "scr_dip" field.</summary>
  public const int ScrDipFieldNumber = 39;
  private double scrDip_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double ScrDip {
    get { return scrDip_; }
    set {
      scrDip_ = value;
    }
  }

  /// <summary>Field number for the "q_type" field.</summary>
  public const int QTypeFieldNumber = 40;
  private int qType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int QType {
    get { return qType_; }
    set {
      qType_ = value;
    }
  }

  /// <summary>Field number for the "is_teenager" field.</summary>
  public const int IsTeenagerFieldNumber = 41;
  private int isTeenager_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int IsTeenager {
    get { return isTeenager_; }
    set {
      isTeenager_ = value;
    }
  }

  /// <summary>Field number for the "sdk_ver" field.</summary>
  public const int SdkVerFieldNumber = 42;
  private string sdkVer_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SdkVer {
    get { return sdkVer_; }
    set {
      sdkVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "framework_ver" field.</summary>
  public const int FrameworkVerFieldNumber = 43;
  private string frameworkVer_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FrameworkVer {
    get { return frameworkVer_; }
    set {
      frameworkVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "naws_game_ver" field.</summary>
  public const int NawsGameVerFieldNumber = 44;
  private string nawsGameVer_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string NawsGameVer {
    get { return nawsGameVer_; }
    set {
      nawsGameVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "idfa" field.</summary>
  public const int IdfaFieldNumber = 45;
  private string idfa_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Idfa {
    get { return idfa_; }
    set {
      idfa_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "diac" field.</summary>
  public const int DiacFieldNumber = 46;
  private string diac_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Diac {
    get { return diac_; }
    set {
      diac_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "active_timestamp" field.</summary>
  public const int ActiveTimestampFieldNumber = 49;
  private long activeTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long ActiveTimestamp {
    get { return activeTimestamp_; }
    set {
      activeTimestamp_ = value;
    }
  }

  /// <summary>Field number for the "first_install_time" field.</summary>
  public const int FirstInstallTimeFieldNumber = 50;
  private long firstInstallTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long FirstInstallTime {
    get { return firstInstallTime_; }
    set {
      firstInstallTime_ = value;
    }
  }

  /// <summary>Field number for the "last_update_time" field.</summary>
  public const int LastUpdateTimeFieldNumber = 51;
  private long lastUpdateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long LastUpdateTime {
    get { return lastUpdateTime_; }
    set {
      lastUpdateTime_ = value;
    }
  }

  /// <summary>Field number for the "event_day" field.</summary>
  public const int EventDayFieldNumber = 53;
  private string eventDay_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EventDay {
    get { return eventDay_; }
    set {
      eventDay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "android_id" field.</summary>
  public const int AndroidIdFieldNumber = 54;
  private string androidId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AndroidId {
    get { return androidId_; }
    set {
      androidId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cmode" field.</summary>
  public const int CmodeFieldNumber = 55;
  private int cmode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Cmode {
    get { return cmode_; }
    set {
      cmode_ = value;
    }
  }

  /// <summary>Field number for the "start_scheme" field.</summary>
  public const int StartSchemeFieldNumber = 56;
  private string startScheme_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string StartScheme {
    get { return startScheme_; }
    set {
      startScheme_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "start_type" field.</summary>
  public const int StartTypeFieldNumber = 57;
  private int startType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int StartType {
    get { return startType_; }
    set {
      startType_ = value;
    }
  }

  /// <summary>Field number for the "shoubai_cuid" field.</summary>
  public const int ShoubaiCuidFieldNumber = 58;
  private string shoubaiCuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ShoubaiCuid {
    get { return shoubaiCuid_; }
    set {
      shoubaiCuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "mac" field.</summary>
  public const int MacFieldNumber = 59;
  private string mac_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Mac {
    get { return mac_; }
    set {
      mac_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "idfv" field.</summary>
  public const int IdfvFieldNumber = 60;
  private string idfv_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Idfv {
    get { return idfv_; }
    set {
      idfv_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "extra" field.</summary>
  public const int ExtraFieldNumber = 61;
  private string extra_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Extra {
    get { return extra_; }
    set {
      extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_agent" field.</summary>
  public const int UserAgentFieldNumber = 62;
  private string userAgent_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string UserAgent {
    get { return userAgent_; }
    set {
      userAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "personalized_rec_switch" field.</summary>
  public const int PersonalizedRecSwitchFieldNumber = 63;
  private int personalizedRecSwitch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PersonalizedRecSwitch {
    get { return personalizedRecSwitch_; }
    set {
      personalizedRecSwitch_ = value;
    }
  }

  /// <summary>Field number for the "iemi" field.</summary>
  public const int IemiFieldNumber = 64;
  private string iemi_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Iemi {
    get { return iemi_; }
    set {
      iemi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "iemiwen" field.</summary>
  public const int IemiwenFieldNumber = 65;
  private string iemiwen_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Iemiwen {
    get { return iemiwen_; }
    set {
      iemiwen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cam" field.</summary>
  public const int CamFieldNumber = 66;
  private string cam_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Cam {
    get { return cam_; }
    set {
      cam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "afdi" field.</summary>
  public const int AfdiFieldNumber = 67;
  private string afdi_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Afdi {
    get { return afdi_; }
    set {
      afdi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "di_diordna" field.</summary>
  public const int DiDiordnaFieldNumber = 68;
  private string diDiordna_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DiDiordna {
    get { return diDiordna_; }
    set {
      diDiordna_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "vfdi" field.</summary>
  public const int VfdiFieldNumber = 69;
  private string vfdi_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Vfdi {
    get { return vfdi_; }
    set {
      vfdi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "device_score" field.</summary>
  public const int DeviceScoreFieldNumber = 70;
  private string deviceScore_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DeviceScore {
    get { return deviceScore_; }
    set {
      deviceScore_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pure_mode" field.</summary>
  public const int PureModeFieldNumber = 71;
  private int pureMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PureMode {
    get { return pureMode_; }
    set {
      pureMode_ = value;
    }
  }

  /// <summary>Field number for the "xcx_mode" field.</summary>
  public const int XcxModeFieldNumber = 72;
  private int xcxMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int XcxMode {
    get { return xcxMode_; }
    set {
      xcxMode_ = value;
    }
  }

  /// <summary>Field number for the "ledom" field.</summary>
  public const int LedomFieldNumber = 73;
  private string ledom_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Ledom {
    get { return ledom_; }
    set {
      ledom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "diao" field.</summary>
  public const int DiaoFieldNumber = 74;
  private string diao_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Diao {
    get { return diao_; }
    set {
      diao_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "noisrev_so" field.</summary>
  public const int NoisrevSoFieldNumber = 75;
  private string noisrevSo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string NoisrevSo {
    get { return noisrevSo_; }
    set {
      noisrevSo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "dnarb" field.</summary>
  public const int DnarbFieldNumber = 76;
  private string dnarb_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Dnarb {
    get { return dnarb_; }
    set {
      dnarb_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "epyt_dnarb" field.</summary>
  public const int EpytDnarbFieldNumber = 77;
  private string epytDnarb_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EpytDnarb {
    get { return epytDnarb_; }
    set {
      epytDnarb_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "w_rcs" field.</summary>
  public const int WRcsFieldNumber = 78;
  private string wRcs_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WRcs {
    get { return wRcs_; }
    set {
      wRcs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "h_rcs" field.</summary>
  public const int HRcsFieldNumber = 79;
  private string hRcs_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string HRcs {
    get { return hRcs_; }
    set {
      hRcs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pid_rcs" field.</summary>
  public const int PidRcsFieldNumber = 80;
  private string pidRcs_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PidRcs {
    get { return pidRcs_; }
    set {
      pidRcs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "need_decrypt" field.</summary>
  public const int NeedDecryptFieldNumber = 81;
  private int needDecrypt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NeedDecrypt {
    get { return needDecrypt_; }
    set {
      needDecrypt_ = value;
    }
  }

  /// <summary>Field number for the "need_cam_decrypt" field.</summary>
  public const int NeedCamDecryptFieldNumber = 82;
  private int needCamDecrypt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NeedCamDecrypt {
    get { return needCamDecrypt_; }
    set {
      needCamDecrypt_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CommonReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CommonReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientType != other.ClientType) return false;
    if (ClientVersion != other.ClientVersion) return false;
    if (ClientId != other.ClientId) return false;
    if (Apid != other.Apid) return false;
    if (PhoneImei != other.PhoneImei) return false;
    if (From != other.From) return false;
    if (Cuid != other.Cuid) return false;
    if (Timestamp != other.Timestamp) return false;
    if (Model != other.Model) return false;
    if (BDUSS != other.BDUSS) return false;
    if (Tbs != other.Tbs) return false;
    if (NetType != other.NetType) return false;
    if (SubappType != other.SubappType) return false;
    if (PhoneNewimei != other.PhoneNewimei) return false;
    if (Ka != other.Ka) return false;
    if (MApi != other.MApi) return false;
    if (MLogid != other.MLogid) return false;
    if (MCost != other.MCost) return false;
    if (MResult != other.MResult) return false;
    if (MSizeU != other.MSizeU) return false;
    if (MSizeD != other.MSizeD) return false;
    if (Smallflow != other.Smallflow) return false;
    if (Sign != other.Sign) return false;
    if (Pversion != other.Pversion) return false;
    if (OsVersion != other.OsVersion) return false;
    if (Brand != other.Brand) return false;
    if (BrandType != other.BrandType) return false;
    if (LegoLibVersion != other.LegoLibVersion) return false;
    if (Applist != other.Applist) return false;
    if (Stoken != other.Stoken) return false;
    if (ZId != other.ZId) return false;
    if (CuidGalaxy2 != other.CuidGalaxy2) return false;
    if (CuidGid != other.CuidGid) return false;
    if (Oaid != other.Oaid) return false;
    if (C3Aid != other.C3Aid) return false;
    if (SampleId != other.SampleId) return false;
    if (ScrW != other.ScrW) return false;
    if (ScrH != other.ScrH) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ScrDip, other.ScrDip)) return false;
    if (QType != other.QType) return false;
    if (IsTeenager != other.IsTeenager) return false;
    if (SdkVer != other.SdkVer) return false;
    if (FrameworkVer != other.FrameworkVer) return false;
    if (NawsGameVer != other.NawsGameVer) return false;
    if (Idfa != other.Idfa) return false;
    if (Diac != other.Diac) return false;
    if (ActiveTimestamp != other.ActiveTimestamp) return false;
    if (FirstInstallTime != other.FirstInstallTime) return false;
    if (LastUpdateTime != other.LastUpdateTime) return false;
    if (EventDay != other.EventDay) return false;
    if (AndroidId != other.AndroidId) return false;
    if (Cmode != other.Cmode) return false;
    if (StartScheme != other.StartScheme) return false;
    if (StartType != other.StartType) return false;
    if (ShoubaiCuid != other.ShoubaiCuid) return false;
    if (Mac != other.Mac) return false;
    if (Idfv != other.Idfv) return false;
    if (Extra != other.Extra) return false;
    if (UserAgent != other.UserAgent) return false;
    if (PersonalizedRecSwitch != other.PersonalizedRecSwitch) return false;
    if (Iemi != other.Iemi) return false;
    if (Iemiwen != other.Iemiwen) return false;
    if (Cam != other.Cam) return false;
    if (Afdi != other.Afdi) return false;
    if (DiDiordna != other.DiDiordna) return false;
    if (Vfdi != other.Vfdi) return false;
    if (DeviceScore != other.DeviceScore) return false;
    if (PureMode != other.PureMode) return false;
    if (XcxMode != other.XcxMode) return false;
    if (Ledom != other.Ledom) return false;
    if (Diao != other.Diao) return false;
    if (NoisrevSo != other.NoisrevSo) return false;
    if (Dnarb != other.Dnarb) return false;
    if (EpytDnarb != other.EpytDnarb) return false;
    if (WRcs != other.WRcs) return false;
    if (HRcs != other.HRcs) return false;
    if (PidRcs != other.PidRcs) return false;
    if (NeedDecrypt != other.NeedDecrypt) return false;
    if (NeedCamDecrypt != other.NeedCamDecrypt) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (ClientType != 0) hash ^= ClientType.GetHashCode();
    if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
    if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
    if (Apid.Length != 0) hash ^= Apid.GetHashCode();
    if (PhoneImei.Length != 0) hash ^= PhoneImei.GetHashCode();
    if (From.Length != 0) hash ^= From.GetHashCode();
    if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
    if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    if (BDUSS.Length != 0) hash ^= BDUSS.GetHashCode();
    if (Tbs.Length != 0) hash ^= Tbs.GetHashCode();
    if (NetType != 0) hash ^= NetType.GetHashCode();
    if (SubappType.Length != 0) hash ^= SubappType.GetHashCode();
    if (PhoneNewimei.Length != 0) hash ^= PhoneNewimei.GetHashCode();
    if (Ka.Length != 0) hash ^= Ka.GetHashCode();
    if (MApi.Length != 0) hash ^= MApi.GetHashCode();
    if (MLogid.Length != 0) hash ^= MLogid.GetHashCode();
    if (MCost.Length != 0) hash ^= MCost.GetHashCode();
    if (MResult.Length != 0) hash ^= MResult.GetHashCode();
    if (MSizeU.Length != 0) hash ^= MSizeU.GetHashCode();
    if (MSizeD.Length != 0) hash ^= MSizeD.GetHashCode();
    if (Smallflow.Length != 0) hash ^= Smallflow.GetHashCode();
    if (Sign.Length != 0) hash ^= Sign.GetHashCode();
    if (Pversion.Length != 0) hash ^= Pversion.GetHashCode();
    if (OsVersion.Length != 0) hash ^= OsVersion.GetHashCode();
    if (Brand.Length != 0) hash ^= Brand.GetHashCode();
    if (BrandType.Length != 0) hash ^= BrandType.GetHashCode();
    if (LegoLibVersion.Length != 0) hash ^= LegoLibVersion.GetHashCode();
    if (Applist.Length != 0) hash ^= Applist.GetHashCode();
    if (Stoken.Length != 0) hash ^= Stoken.GetHashCode();
    if (ZId.Length != 0) hash ^= ZId.GetHashCode();
    if (CuidGalaxy2.Length != 0) hash ^= CuidGalaxy2.GetHashCode();
    if (CuidGid.Length != 0) hash ^= CuidGid.GetHashCode();
    if (Oaid.Length != 0) hash ^= Oaid.GetHashCode();
    if (C3Aid.Length != 0) hash ^= C3Aid.GetHashCode();
    if (SampleId.Length != 0) hash ^= SampleId.GetHashCode();
    if (ScrW != 0) hash ^= ScrW.GetHashCode();
    if (ScrH != 0) hash ^= ScrH.GetHashCode();
    if (ScrDip != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ScrDip);
    if (QType != 0) hash ^= QType.GetHashCode();
    if (IsTeenager != 0) hash ^= IsTeenager.GetHashCode();
    if (SdkVer.Length != 0) hash ^= SdkVer.GetHashCode();
    if (FrameworkVer.Length != 0) hash ^= FrameworkVer.GetHashCode();
    if (NawsGameVer.Length != 0) hash ^= NawsGameVer.GetHashCode();
    if (Idfa.Length != 0) hash ^= Idfa.GetHashCode();
    if (Diac.Length != 0) hash ^= Diac.GetHashCode();
    if (ActiveTimestamp != 0L) hash ^= ActiveTimestamp.GetHashCode();
    if (FirstInstallTime != 0L) hash ^= FirstInstallTime.GetHashCode();
    if (LastUpdateTime != 0L) hash ^= LastUpdateTime.GetHashCode();
    if (EventDay.Length != 0) hash ^= EventDay.GetHashCode();
    if (AndroidId.Length != 0) hash ^= AndroidId.GetHashCode();
    if (Cmode != 0) hash ^= Cmode.GetHashCode();
    if (StartScheme.Length != 0) hash ^= StartScheme.GetHashCode();
    if (StartType != 0) hash ^= StartType.GetHashCode();
    if (ShoubaiCuid.Length != 0) hash ^= ShoubaiCuid.GetHashCode();
    if (Mac.Length != 0) hash ^= Mac.GetHashCode();
    if (Idfv.Length != 0) hash ^= Idfv.GetHashCode();
    if (Extra.Length != 0) hash ^= Extra.GetHashCode();
    if (UserAgent.Length != 0) hash ^= UserAgent.GetHashCode();
    if (PersonalizedRecSwitch != 0) hash ^= PersonalizedRecSwitch.GetHashCode();
    if (Iemi.Length != 0) hash ^= Iemi.GetHashCode();
    if (Iemiwen.Length != 0) hash ^= Iemiwen.GetHashCode();
    if (Cam.Length != 0) hash ^= Cam.GetHashCode();
    if (Afdi.Length != 0) hash ^= Afdi.GetHashCode();
    if (DiDiordna.Length != 0) hash ^= DiDiordna.GetHashCode();
    if (Vfdi.Length != 0) hash ^= Vfdi.GetHashCode();
    if (DeviceScore.Length != 0) hash ^= DeviceScore.GetHashCode();
    if (PureMode != 0) hash ^= PureMode.GetHashCode();
    if (XcxMode != 0) hash ^= XcxMode.GetHashCode();
    if (Ledom.Length != 0) hash ^= Ledom.GetHashCode();
    if (Diao.Length != 0) hash ^= Diao.GetHashCode();
    if (NoisrevSo.Length != 0) hash ^= NoisrevSo.GetHashCode();
    if (Dnarb.Length != 0) hash ^= Dnarb.GetHashCode();
    if (EpytDnarb.Length != 0) hash ^= EpytDnarb.GetHashCode();
    if (WRcs.Length != 0) hash ^= WRcs.GetHashCode();
    if (HRcs.Length != 0) hash ^= HRcs.GetHashCode();
    if (PidRcs.Length != 0) hash ^= PidRcs.GetHashCode();
    if (NeedDecrypt != 0) hash ^= NeedDecrypt.GetHashCode();
    if (NeedCamDecrypt != 0) hash ^= NeedCamDecrypt.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ClientType != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ClientType);
    }
    if (ClientVersion.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ClientVersion);
    }
    if (ClientId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ClientId);
    }
    if (Apid.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Apid);
    }
    if (PhoneImei.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(PhoneImei);
    }
    if (From.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(From);
    }
    if (Cuid.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Cuid);
    }
    if (Timestamp != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(Timestamp);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Model);
    }
    if (BDUSS.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(BDUSS);
    }
    if (Tbs.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Tbs);
    }
    if (NetType != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(NetType);
    }
    if (SubappType.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(SubappType);
    }
    if (PhoneNewimei.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(PhoneNewimei);
    }
    if (Ka.Length != 0) {
      output.WriteRawTag(122);
      output.WriteString(Ka);
    }
    if (MApi.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(MApi);
    }
    if (MLogid.Length != 0) {
      output.WriteRawTag(138, 1);
      output.WriteString(MLogid);
    }
    if (MCost.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(MCost);
    }
    if (MResult.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(MResult);
    }
    if (MSizeU.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(MSizeU);
    }
    if (MSizeD.Length != 0) {
      output.WriteRawTag(170, 1);
      output.WriteString(MSizeD);
    }
    if (Smallflow.Length != 0) {
      output.WriteRawTag(178, 1);
      output.WriteString(Smallflow);
    }
    if (Sign.Length != 0) {
      output.WriteRawTag(186, 1);
      output.WriteString(Sign);
    }
    if (Pversion.Length != 0) {
      output.WriteRawTag(194, 1);
      output.WriteString(Pversion);
    }
    if (OsVersion.Length != 0) {
      output.WriteRawTag(202, 1);
      output.WriteString(OsVersion);
    }
    if (Brand.Length != 0) {
      output.WriteRawTag(210, 1);
      output.WriteString(Brand);
    }
    if (BrandType.Length != 0) {
      output.WriteRawTag(218, 1);
      output.WriteString(BrandType);
    }
    if (LegoLibVersion.Length != 0) {
      output.WriteRawTag(226, 1);
      output.WriteString(LegoLibVersion);
    }
    if (Applist.Length != 0) {
      output.WriteRawTag(234, 1);
      output.WriteString(Applist);
    }
    if (Stoken.Length != 0) {
      output.WriteRawTag(242, 1);
      output.WriteString(Stoken);
    }
    if (ZId.Length != 0) {
      output.WriteRawTag(250, 1);
      output.WriteString(ZId);
    }
    if (CuidGalaxy2.Length != 0) {
      output.WriteRawTag(130, 2);
      output.WriteString(CuidGalaxy2);
    }
    if (CuidGid.Length != 0) {
      output.WriteRawTag(138, 2);
      output.WriteString(CuidGid);
    }
    if (Oaid.Length != 0) {
      output.WriteRawTag(146, 2);
      output.WriteString(Oaid);
    }
    if (C3Aid.Length != 0) {
      output.WriteRawTag(154, 2);
      output.WriteString(C3Aid);
    }
    if (SampleId.Length != 0) {
      output.WriteRawTag(162, 2);
      output.WriteString(SampleId);
    }
    if (ScrW != 0) {
      output.WriteRawTag(168, 2);
      output.WriteInt32(ScrW);
    }
    if (ScrH != 0) {
      output.WriteRawTag(176, 2);
      output.WriteInt32(ScrH);
    }
    if (ScrDip != 0D) {
      output.WriteRawTag(185, 2);
      output.WriteDouble(ScrDip);
    }
    if (QType != 0) {
      output.WriteRawTag(192, 2);
      output.WriteInt32(QType);
    }
    if (IsTeenager != 0) {
      output.WriteRawTag(200, 2);
      output.WriteInt32(IsTeenager);
    }
    if (SdkVer.Length != 0) {
      output.WriteRawTag(210, 2);
      output.WriteString(SdkVer);
    }
    if (FrameworkVer.Length != 0) {
      output.WriteRawTag(218, 2);
      output.WriteString(FrameworkVer);
    }
    if (NawsGameVer.Length != 0) {
      output.WriteRawTag(226, 2);
      output.WriteString(NawsGameVer);
    }
    if (Idfa.Length != 0) {
      output.WriteRawTag(234, 2);
      output.WriteString(Idfa);
    }
    if (Diac.Length != 0) {
      output.WriteRawTag(242, 2);
      output.WriteString(Diac);
    }
    if (ActiveTimestamp != 0L) {
      output.WriteRawTag(136, 3);
      output.WriteInt64(ActiveTimestamp);
    }
    if (FirstInstallTime != 0L) {
      output.WriteRawTag(144, 3);
      output.WriteInt64(FirstInstallTime);
    }
    if (LastUpdateTime != 0L) {
      output.WriteRawTag(152, 3);
      output.WriteInt64(LastUpdateTime);
    }
    if (EventDay.Length != 0) {
      output.WriteRawTag(170, 3);
      output.WriteString(EventDay);
    }
    if (AndroidId.Length != 0) {
      output.WriteRawTag(178, 3);
      output.WriteString(AndroidId);
    }
    if (Cmode != 0) {
      output.WriteRawTag(184, 3);
      output.WriteInt32(Cmode);
    }
    if (StartScheme.Length != 0) {
      output.WriteRawTag(194, 3);
      output.WriteString(StartScheme);
    }
    if (StartType != 0) {
      output.WriteRawTag(200, 3);
      output.WriteInt32(StartType);
    }
    if (ShoubaiCuid.Length != 0) {
      output.WriteRawTag(210, 3);
      output.WriteString(ShoubaiCuid);
    }
    if (Mac.Length != 0) {
      output.WriteRawTag(218, 3);
      output.WriteString(Mac);
    }
    if (Idfv.Length != 0) {
      output.WriteRawTag(226, 3);
      output.WriteString(Idfv);
    }
    if (Extra.Length != 0) {
      output.WriteRawTag(234, 3);
      output.WriteString(Extra);
    }
    if (UserAgent.Length != 0) {
      output.WriteRawTag(242, 3);
      output.WriteString(UserAgent);
    }
    if (PersonalizedRecSwitch != 0) {
      output.WriteRawTag(248, 3);
      output.WriteInt32(PersonalizedRecSwitch);
    }
    if (Iemi.Length != 0) {
      output.WriteRawTag(130, 4);
      output.WriteString(Iemi);
    }
    if (Iemiwen.Length != 0) {
      output.WriteRawTag(138, 4);
      output.WriteString(Iemiwen);
    }
    if (Cam.Length != 0) {
      output.WriteRawTag(146, 4);
      output.WriteString(Cam);
    }
    if (Afdi.Length != 0) {
      output.WriteRawTag(154, 4);
      output.WriteString(Afdi);
    }
    if (DiDiordna.Length != 0) {
      output.WriteRawTag(162, 4);
      output.WriteString(DiDiordna);
    }
    if (Vfdi.Length != 0) {
      output.WriteRawTag(170, 4);
      output.WriteString(Vfdi);
    }
    if (DeviceScore.Length != 0) {
      output.WriteRawTag(178, 4);
      output.WriteString(DeviceScore);
    }
    if (PureMode != 0) {
      output.WriteRawTag(184, 4);
      output.WriteInt32(PureMode);
    }
    if (XcxMode != 0) {
      output.WriteRawTag(192, 4);
      output.WriteInt32(XcxMode);
    }
    if (Ledom.Length != 0) {
      output.WriteRawTag(202, 4);
      output.WriteString(Ledom);
    }
    if (Diao.Length != 0) {
      output.WriteRawTag(210, 4);
      output.WriteString(Diao);
    }
    if (NoisrevSo.Length != 0) {
      output.WriteRawTag(218, 4);
      output.WriteString(NoisrevSo);
    }
    if (Dnarb.Length != 0) {
      output.WriteRawTag(226, 4);
      output.WriteString(Dnarb);
    }
    if (EpytDnarb.Length != 0) {
      output.WriteRawTag(234, 4);
      output.WriteString(EpytDnarb);
    }
    if (WRcs.Length != 0) {
      output.WriteRawTag(242, 4);
      output.WriteString(WRcs);
    }
    if (HRcs.Length != 0) {
      output.WriteRawTag(250, 4);
      output.WriteString(HRcs);
    }
    if (PidRcs.Length != 0) {
      output.WriteRawTag(130, 5);
      output.WriteString(PidRcs);
    }
    if (NeedDecrypt != 0) {
      output.WriteRawTag(136, 5);
      output.WriteInt32(NeedDecrypt);
    }
    if (NeedCamDecrypt != 0) {
      output.WriteRawTag(144, 5);
      output.WriteInt32(NeedCamDecrypt);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ClientType != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ClientType);
    }
    if (ClientVersion.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ClientVersion);
    }
    if (ClientId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ClientId);
    }
    if (Apid.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Apid);
    }
    if (PhoneImei.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(PhoneImei);
    }
    if (From.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(From);
    }
    if (Cuid.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Cuid);
    }
    if (Timestamp != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(Timestamp);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Model);
    }
    if (BDUSS.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(BDUSS);
    }
    if (Tbs.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Tbs);
    }
    if (NetType != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(NetType);
    }
    if (SubappType.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(SubappType);
    }
    if (PhoneNewimei.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(PhoneNewimei);
    }
    if (Ka.Length != 0) {
      output.WriteRawTag(122);
      output.WriteString(Ka);
    }
    if (MApi.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(MApi);
    }
    if (MLogid.Length != 0) {
      output.WriteRawTag(138, 1);
      output.WriteString(MLogid);
    }
    if (MCost.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(MCost);
    }
    if (MResult.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(MResult);
    }
    if (MSizeU.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(MSizeU);
    }
    if (MSizeD.Length != 0) {
      output.WriteRawTag(170, 1);
      output.WriteString(MSizeD);
    }
    if (Smallflow.Length != 0) {
      output.WriteRawTag(178, 1);
      output.WriteString(Smallflow);
    }
    if (Sign.Length != 0) {
      output.WriteRawTag(186, 1);
      output.WriteString(Sign);
    }
    if (Pversion.Length != 0) {
      output.WriteRawTag(194, 1);
      output.WriteString(Pversion);
    }
    if (OsVersion.Length != 0) {
      output.WriteRawTag(202, 1);
      output.WriteString(OsVersion);
    }
    if (Brand.Length != 0) {
      output.WriteRawTag(210, 1);
      output.WriteString(Brand);
    }
    if (BrandType.Length != 0) {
      output.WriteRawTag(218, 1);
      output.WriteString(BrandType);
    }
    if (LegoLibVersion.Length != 0) {
      output.WriteRawTag(226, 1);
      output.WriteString(LegoLibVersion);
    }
    if (Applist.Length != 0) {
      output.WriteRawTag(234, 1);
      output.WriteString(Applist);
    }
    if (Stoken.Length != 0) {
      output.WriteRawTag(242, 1);
      output.WriteString(Stoken);
    }
    if (ZId.Length != 0) {
      output.WriteRawTag(250, 1);
      output.WriteString(ZId);
    }
    if (CuidGalaxy2.Length != 0) {
      output.WriteRawTag(130, 2);
      output.WriteString(CuidGalaxy2);
    }
    if (CuidGid.Length != 0) {
      output.WriteRawTag(138, 2);
      output.WriteString(CuidGid);
    }
    if (Oaid.Length != 0) {
      output.WriteRawTag(146, 2);
      output.WriteString(Oaid);
    }
    if (C3Aid.Length != 0) {
      output.WriteRawTag(154, 2);
      output.WriteString(C3Aid);
    }
    if (SampleId.Length != 0) {
      output.WriteRawTag(162, 2);
      output.WriteString(SampleId);
    }
    if (ScrW != 0) {
      output.WriteRawTag(168, 2);
      output.WriteInt32(ScrW);
    }
    if (ScrH != 0) {
      output.WriteRawTag(176, 2);
      output.WriteInt32(ScrH);
    }
    if (ScrDip != 0D) {
      output.WriteRawTag(185, 2);
      output.WriteDouble(ScrDip);
    }
    if (QType != 0) {
      output.WriteRawTag(192, 2);
      output.WriteInt32(QType);
    }
    if (IsTeenager != 0) {
      output.WriteRawTag(200, 2);
      output.WriteInt32(IsTeenager);
    }
    if (SdkVer.Length != 0) {
      output.WriteRawTag(210, 2);
      output.WriteString(SdkVer);
    }
    if (FrameworkVer.Length != 0) {
      output.WriteRawTag(218, 2);
      output.WriteString(FrameworkVer);
    }
    if (NawsGameVer.Length != 0) {
      output.WriteRawTag(226, 2);
      output.WriteString(NawsGameVer);
    }
    if (Idfa.Length != 0) {
      output.WriteRawTag(234, 2);
      output.WriteString(Idfa);
    }
    if (Diac.Length != 0) {
      output.WriteRawTag(242, 2);
      output.WriteString(Diac);
    }
    if (ActiveTimestamp != 0L) {
      output.WriteRawTag(136, 3);
      output.WriteInt64(ActiveTimestamp);
    }
    if (FirstInstallTime != 0L) {
      output.WriteRawTag(144, 3);
      output.WriteInt64(FirstInstallTime);
    }
    if (LastUpdateTime != 0L) {
      output.WriteRawTag(152, 3);
      output.WriteInt64(LastUpdateTime);
    }
    if (EventDay.Length != 0) {
      output.WriteRawTag(170, 3);
      output.WriteString(EventDay);
    }
    if (AndroidId.Length != 0) {
      output.WriteRawTag(178, 3);
      output.WriteString(AndroidId);
    }
    if (Cmode != 0) {
      output.WriteRawTag(184, 3);
      output.WriteInt32(Cmode);
    }
    if (StartScheme.Length != 0) {
      output.WriteRawTag(194, 3);
      output.WriteString(StartScheme);
    }
    if (StartType != 0) {
      output.WriteRawTag(200, 3);
      output.WriteInt32(StartType);
    }
    if (ShoubaiCuid.Length != 0) {
      output.WriteRawTag(210, 3);
      output.WriteString(ShoubaiCuid);
    }
    if (Mac.Length != 0) {
      output.WriteRawTag(218, 3);
      output.WriteString(Mac);
    }
    if (Idfv.Length != 0) {
      output.WriteRawTag(226, 3);
      output.WriteString(Idfv);
    }
    if (Extra.Length != 0) {
      output.WriteRawTag(234, 3);
      output.WriteString(Extra);
    }
    if (UserAgent.Length != 0) {
      output.WriteRawTag(242, 3);
      output.WriteString(UserAgent);
    }
    if (PersonalizedRecSwitch != 0) {
      output.WriteRawTag(248, 3);
      output.WriteInt32(PersonalizedRecSwitch);
    }
    if (Iemi.Length != 0) {
      output.WriteRawTag(130, 4);
      output.WriteString(Iemi);
    }
    if (Iemiwen.Length != 0) {
      output.WriteRawTag(138, 4);
      output.WriteString(Iemiwen);
    }
    if (Cam.Length != 0) {
      output.WriteRawTag(146, 4);
      output.WriteString(Cam);
    }
    if (Afdi.Length != 0) {
      output.WriteRawTag(154, 4);
      output.WriteString(Afdi);
    }
    if (DiDiordna.Length != 0) {
      output.WriteRawTag(162, 4);
      output.WriteString(DiDiordna);
    }
    if (Vfdi.Length != 0) {
      output.WriteRawTag(170, 4);
      output.WriteString(Vfdi);
    }
    if (DeviceScore.Length != 0) {
      output.WriteRawTag(178, 4);
      output.WriteString(DeviceScore);
    }
    if (PureMode != 0) {
      output.WriteRawTag(184, 4);
      output.WriteInt32(PureMode);
    }
    if (XcxMode != 0) {
      output.WriteRawTag(192, 4);
      output.WriteInt32(XcxMode);
    }
    if (Ledom.Length != 0) {
      output.WriteRawTag(202, 4);
      output.WriteString(Ledom);
    }
    if (Diao.Length != 0) {
      output.WriteRawTag(210, 4);
      output.WriteString(Diao);
    }
    if (NoisrevSo.Length != 0) {
      output.WriteRawTag(218, 4);
      output.WriteString(NoisrevSo);
    }
    if (Dnarb.Length != 0) {
      output.WriteRawTag(226, 4);
      output.WriteString(Dnarb);
    }
    if (EpytDnarb.Length != 0) {
      output.WriteRawTag(234, 4);
      output.WriteString(EpytDnarb);
    }
    if (WRcs.Length != 0) {
      output.WriteRawTag(242, 4);
      output.WriteString(WRcs);
    }
    if (HRcs.Length != 0) {
      output.WriteRawTag(250, 4);
      output.WriteString(HRcs);
    }
    if (PidRcs.Length != 0) {
      output.WriteRawTag(130, 5);
      output.WriteString(PidRcs);
    }
    if (NeedDecrypt != 0) {
      output.WriteRawTag(136, 5);
      output.WriteInt32(NeedDecrypt);
    }
    if (NeedCamDecrypt != 0) {
      output.WriteRawTag(144, 5);
      output.WriteInt32(NeedCamDecrypt);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (ClientType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientType);
    }
    if (ClientVersion.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
    }
    if (ClientId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
    }
    if (Apid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Apid);
    }
    if (PhoneImei.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneImei);
    }
    if (From.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
    }
    if (Cuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
    }
    if (Timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
    }
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    if (BDUSS.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BDUSS);
    }
    if (Tbs.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Tbs);
    }
    if (NetType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetType);
    }
    if (SubappType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SubappType);
    }
    if (PhoneNewimei.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNewimei);
    }
    if (Ka.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Ka);
    }
    if (MApi.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MApi);
    }
    if (MLogid.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MLogid);
    }
    if (MCost.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MCost);
    }
    if (MResult.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MResult);
    }
    if (MSizeU.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MSizeU);
    }
    if (MSizeD.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MSizeD);
    }
    if (Smallflow.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Smallflow);
    }
    if (Sign.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Sign);
    }
    if (Pversion.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Pversion);
    }
    if (OsVersion.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
    }
    if (Brand.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Brand);
    }
    if (BrandType.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(BrandType);
    }
    if (LegoLibVersion.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(LegoLibVersion);
    }
    if (Applist.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Applist);
    }
    if (Stoken.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Stoken);
    }
    if (ZId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(ZId);
    }
    if (CuidGalaxy2.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(CuidGalaxy2);
    }
    if (CuidGid.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(CuidGid);
    }
    if (Oaid.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Oaid);
    }
    if (C3Aid.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(C3Aid);
    }
    if (SampleId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SampleId);
    }
    if (ScrW != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(ScrW);
    }
    if (ScrH != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(ScrH);
    }
    if (ScrDip != 0D) {
      size += 2 + 8;
    }
    if (QType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(QType);
    }
    if (IsTeenager != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(IsTeenager);
    }
    if (SdkVer.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SdkVer);
    }
    if (FrameworkVer.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(FrameworkVer);
    }
    if (NawsGameVer.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(NawsGameVer);
    }
    if (Idfa.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Idfa);
    }
    if (Diac.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Diac);
    }
    if (ActiveTimestamp != 0L) {
      size += 2 + pb::CodedOutputStream.ComputeInt64Size(ActiveTimestamp);
    }
    if (FirstInstallTime != 0L) {
      size += 2 + pb::CodedOutputStream.ComputeInt64Size(FirstInstallTime);
    }
    if (LastUpdateTime != 0L) {
      size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastUpdateTime);
    }
    if (EventDay.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(EventDay);
    }
    if (AndroidId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(AndroidId);
    }
    if (Cmode != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Cmode);
    }
    if (StartScheme.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(StartScheme);
    }
    if (StartType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(StartType);
    }
    if (ShoubaiCuid.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(ShoubaiCuid);
    }
    if (Mac.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Mac);
    }
    if (Idfv.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Idfv);
    }
    if (Extra.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Extra);
    }
    if (UserAgent.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
    }
    if (PersonalizedRecSwitch != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(PersonalizedRecSwitch);
    }
    if (Iemi.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Iemi);
    }
    if (Iemiwen.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Iemiwen);
    }
    if (Cam.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Cam);
    }
    if (Afdi.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Afdi);
    }
    if (DiDiordna.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(DiDiordna);
    }
    if (Vfdi.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Vfdi);
    }
    if (DeviceScore.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceScore);
    }
    if (PureMode != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(PureMode);
    }
    if (XcxMode != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(XcxMode);
    }
    if (Ledom.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Ledom);
    }
    if (Diao.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Diao);
    }
    if (NoisrevSo.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(NoisrevSo);
    }
    if (Dnarb.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Dnarb);
    }
    if (EpytDnarb.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(EpytDnarb);
    }
    if (WRcs.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(WRcs);
    }
    if (HRcs.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(HRcs);
    }
    if (PidRcs.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(PidRcs);
    }
    if (NeedDecrypt != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(NeedDecrypt);
    }
    if (NeedCamDecrypt != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(NeedCamDecrypt);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CommonReq other) {
    if (other == null) {
      return;
    }
    if (other.ClientType != 0) {
      ClientType = other.ClientType;
    }
    if (other.ClientVersion.Length != 0) {
      ClientVersion = other.ClientVersion;
    }
    if (other.ClientId.Length != 0) {
      ClientId = other.ClientId;
    }
    if (other.Apid.Length != 0) {
      Apid = other.Apid;
    }
    if (other.PhoneImei.Length != 0) {
      PhoneImei = other.PhoneImei;
    }
    if (other.From.Length != 0) {
      From = other.From;
    }
    if (other.Cuid.Length != 0) {
      Cuid = other.Cuid;
    }
    if (other.Timestamp != 0L) {
      Timestamp = other.Timestamp;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    if (other.BDUSS.Length != 0) {
      BDUSS = other.BDUSS;
    }
    if (other.Tbs.Length != 0) {
      Tbs = other.Tbs;
    }
    if (other.NetType != 0) {
      NetType = other.NetType;
    }
    if (other.SubappType.Length != 0) {
      SubappType = other.SubappType;
    }
    if (other.PhoneNewimei.Length != 0) {
      PhoneNewimei = other.PhoneNewimei;
    }
    if (other.Ka.Length != 0) {
      Ka = other.Ka;
    }
    if (other.MApi.Length != 0) {
      MApi = other.MApi;
    }
    if (other.MLogid.Length != 0) {
      MLogid = other.MLogid;
    }
    if (other.MCost.Length != 0) {
      MCost = other.MCost;
    }
    if (other.MResult.Length != 0) {
      MResult = other.MResult;
    }
    if (other.MSizeU.Length != 0) {
      MSizeU = other.MSizeU;
    }
    if (other.MSizeD.Length != 0) {
      MSizeD = other.MSizeD;
    }
    if (other.Smallflow.Length != 0) {
      Smallflow = other.Smallflow;
    }
    if (other.Sign.Length != 0) {
      Sign = other.Sign;
    }
    if (other.Pversion.Length != 0) {
      Pversion = other.Pversion;
    }
    if (other.OsVersion.Length != 0) {
      OsVersion = other.OsVersion;
    }
    if (other.Brand.Length != 0) {
      Brand = other.Brand;
    }
    if (other.BrandType.Length != 0) {
      BrandType = other.BrandType;
    }
    if (other.LegoLibVersion.Length != 0) {
      LegoLibVersion = other.LegoLibVersion;
    }
    if (other.Applist.Length != 0) {
      Applist = other.Applist;
    }
    if (other.Stoken.Length != 0) {
      Stoken = other.Stoken;
    }
    if (other.ZId.Length != 0) {
      ZId = other.ZId;
    }
    if (other.CuidGalaxy2.Length != 0) {
      CuidGalaxy2 = other.CuidGalaxy2;
    }
    if (other.CuidGid.Length != 0) {
      CuidGid = other.CuidGid;
    }
    if (other.Oaid.Length != 0) {
      Oaid = other.Oaid;
    }
    if (other.C3Aid.Length != 0) {
      C3Aid = other.C3Aid;
    }
    if (other.SampleId.Length != 0) {
      SampleId = other.SampleId;
    }
    if (other.ScrW != 0) {
      ScrW = other.ScrW;
    }
    if (other.ScrH != 0) {
      ScrH = other.ScrH;
    }
    if (other.ScrDip != 0D) {
      ScrDip = other.ScrDip;
    }
    if (other.QType != 0) {
      QType = other.QType;
    }
    if (other.IsTeenager != 0) {
      IsTeenager = other.IsTeenager;
    }
    if (other.SdkVer.Length != 0) {
      SdkVer = other.SdkVer;
    }
    if (other.FrameworkVer.Length != 0) {
      FrameworkVer = other.FrameworkVer;
    }
    if (other.NawsGameVer.Length != 0) {
      NawsGameVer = other.NawsGameVer;
    }
    if (other.Idfa.Length != 0) {
      Idfa = other.Idfa;
    }
    if (other.Diac.Length != 0) {
      Diac = other.Diac;
    }
    if (other.ActiveTimestamp != 0L) {
      ActiveTimestamp = other.ActiveTimestamp;
    }
    if (other.FirstInstallTime != 0L) {
      FirstInstallTime = other.FirstInstallTime;
    }
    if (other.LastUpdateTime != 0L) {
      LastUpdateTime = other.LastUpdateTime;
    }
    if (other.EventDay.Length != 0) {
      EventDay = other.EventDay;
    }
    if (other.AndroidId.Length != 0) {
      AndroidId = other.AndroidId;
    }
    if (other.Cmode != 0) {
      Cmode = other.Cmode;
    }
    if (other.StartScheme.Length != 0) {
      StartScheme = other.StartScheme;
    }
    if (other.StartType != 0) {
      StartType = other.StartType;
    }
    if (other.ShoubaiCuid.Length != 0) {
      ShoubaiCuid = other.ShoubaiCuid;
    }
    if (other.Mac.Length != 0) {
      Mac = other.Mac;
    }
    if (other.Idfv.Length != 0) {
      Idfv = other.Idfv;
    }
    if (other.Extra.Length != 0) {
      Extra = other.Extra;
    }
    if (other.UserAgent.Length != 0) {
      UserAgent = other.UserAgent;
    }
    if (other.PersonalizedRecSwitch != 0) {
      PersonalizedRecSwitch = other.PersonalizedRecSwitch;
    }
    if (other.Iemi.Length != 0) {
      Iemi = other.Iemi;
    }
    if (other.Iemiwen.Length != 0) {
      Iemiwen = other.Iemiwen;
    }
    if (other.Cam.Length != 0) {
      Cam = other.Cam;
    }
    if (other.Afdi.Length != 0) {
      Afdi = other.Afdi;
    }
    if (other.DiDiordna.Length != 0) {
      DiDiordna = other.DiDiordna;
    }
    if (other.Vfdi.Length != 0) {
      Vfdi = other.Vfdi;
    }
    if (other.DeviceScore.Length != 0) {
      DeviceScore = other.DeviceScore;
    }
    if (other.PureMode != 0) {
      PureMode = other.PureMode;
    }
    if (other.XcxMode != 0) {
      XcxMode = other.XcxMode;
    }
    if (other.Ledom.Length != 0) {
      Ledom = other.Ledom;
    }
    if (other.Diao.Length != 0) {
      Diao = other.Diao;
    }
    if (other.NoisrevSo.Length != 0) {
      NoisrevSo = other.NoisrevSo;
    }
    if (other.Dnarb.Length != 0) {
      Dnarb = other.Dnarb;
    }
    if (other.EpytDnarb.Length != 0) {
      EpytDnarb = other.EpytDnarb;
    }
    if (other.WRcs.Length != 0) {
      WRcs = other.WRcs;
    }
    if (other.HRcs.Length != 0) {
      HRcs = other.HRcs;
    }
    if (other.PidRcs.Length != 0) {
      PidRcs = other.PidRcs;
    }
    if (other.NeedDecrypt != 0) {
      NeedDecrypt = other.NeedDecrypt;
    }
    if (other.NeedCamDecrypt != 0) {
      NeedCamDecrypt = other.NeedCamDecrypt;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ClientType = input.ReadInt32();
          break;
        }
        case 18: {
          ClientVersion = input.ReadString();
          break;
        }
        case 26: {
          ClientId = input.ReadString();
          break;
        }
        case 34: {
          Apid = input.ReadString();
          break;
        }
        case 42: {
          PhoneImei = input.ReadString();
          break;
        }
        case 50: {
          From = input.ReadString();
          break;
        }
        case 58: {
          Cuid = input.ReadString();
          break;
        }
        case 64: {
          Timestamp = input.ReadInt64();
          break;
        }
        case 74: {
          Model = input.ReadString();
          break;
        }
        case 82: {
          BDUSS = input.ReadString();
          break;
        }
        case 90: {
          Tbs = input.ReadString();
          break;
        }
        case 96: {
          NetType = input.ReadInt32();
          break;
        }
        case 106: {
          SubappType = input.ReadString();
          break;
        }
        case 114: {
          PhoneNewimei = input.ReadString();
          break;
        }
        case 122: {
          Ka = input.ReadString();
          break;
        }
        case 130: {
          MApi = input.ReadString();
          break;
        }
        case 138: {
          MLogid = input.ReadString();
          break;
        }
        case 146: {
          MCost = input.ReadString();
          break;
        }
        case 154: {
          MResult = input.ReadString();
          break;
        }
        case 162: {
          MSizeU = input.ReadString();
          break;
        }
        case 170: {
          MSizeD = input.ReadString();
          break;
        }
        case 178: {
          Smallflow = input.ReadString();
          break;
        }
        case 186: {
          Sign = input.ReadString();
          break;
        }
        case 194: {
          Pversion = input.ReadString();
          break;
        }
        case 202: {
          OsVersion = input.ReadString();
          break;
        }
        case 210: {
          Brand = input.ReadString();
          break;
        }
        case 218: {
          BrandType = input.ReadString();
          break;
        }
        case 226: {
          LegoLibVersion = input.ReadString();
          break;
        }
        case 234: {
          Applist = input.ReadString();
          break;
        }
        case 242: {
          Stoken = input.ReadString();
          break;
        }
        case 250: {
          ZId = input.ReadString();
          break;
        }
        case 258: {
          CuidGalaxy2 = input.ReadString();
          break;
        }
        case 266: {
          CuidGid = input.ReadString();
          break;
        }
        case 274: {
          Oaid = input.ReadString();
          break;
        }
        case 282: {
          C3Aid = input.ReadString();
          break;
        }
        case 290: {
          SampleId = input.ReadString();
          break;
        }
        case 296: {
          ScrW = input.ReadInt32();
          break;
        }
        case 304: {
          ScrH = input.ReadInt32();
          break;
        }
        case 313: {
          ScrDip = input.ReadDouble();
          break;
        }
        case 320: {
          QType = input.ReadInt32();
          break;
        }
        case 328: {
          IsTeenager = input.ReadInt32();
          break;
        }
        case 338: {
          SdkVer = input.ReadString();
          break;
        }
        case 346: {
          FrameworkVer = input.ReadString();
          break;
        }
        case 354: {
          NawsGameVer = input.ReadString();
          break;
        }
        case 362: {
          Idfa = input.ReadString();
          break;
        }
        case 370: {
          Diac = input.ReadString();
          break;
        }
        case 392: {
          ActiveTimestamp = input.ReadInt64();
          break;
        }
        case 400: {
          FirstInstallTime = input.ReadInt64();
          break;
        }
        case 408: {
          LastUpdateTime = input.ReadInt64();
          break;
        }
        case 426: {
          EventDay = input.ReadString();
          break;
        }
        case 434: {
          AndroidId = input.ReadString();
          break;
        }
        case 440: {
          Cmode = input.ReadInt32();
          break;
        }
        case 450: {
          StartScheme = input.ReadString();
          break;
        }
        case 456: {
          StartType = input.ReadInt32();
          break;
        }
        case 466: {
          ShoubaiCuid = input.ReadString();
          break;
        }
        case 474: {
          Mac = input.ReadString();
          break;
        }
        case 482: {
          Idfv = input.ReadString();
          break;
        }
        case 490: {
          Extra = input.ReadString();
          break;
        }
        case 498: {
          UserAgent = input.ReadString();
          break;
        }
        case 504: {
          PersonalizedRecSwitch = input.ReadInt32();
          break;
        }
        case 514: {
          Iemi = input.ReadString();
          break;
        }
        case 522: {
          Iemiwen = input.ReadString();
          break;
        }
        case 530: {
          Cam = input.ReadString();
          break;
        }
        case 538: {
          Afdi = input.ReadString();
          break;
        }
        case 546: {
          DiDiordna = input.ReadString();
          break;
        }
        case 554: {
          Vfdi = input.ReadString();
          break;
        }
        case 562: {
          DeviceScore = input.ReadString();
          break;
        }
        case 568: {
          PureMode = input.ReadInt32();
          break;
        }
        case 576: {
          XcxMode = input.ReadInt32();
          break;
        }
        case 586: {
          Ledom = input.ReadString();
          break;
        }
        case 594: {
          Diao = input.ReadString();
          break;
        }
        case 602: {
          NoisrevSo = input.ReadString();
          break;
        }
        case 610: {
          Dnarb = input.ReadString();
          break;
        }
        case 618: {
          EpytDnarb = input.ReadString();
          break;
        }
        case 626: {
          WRcs = input.ReadString();
          break;
        }
        case 634: {
          HRcs = input.ReadString();
          break;
        }
        case 642: {
          PidRcs = input.ReadString();
          break;
        }
        case 648: {
          NeedDecrypt = input.ReadInt32();
          break;
        }
        case 656: {
          NeedCamDecrypt = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ClientType = input.ReadInt32();
          break;
        }
        case 18: {
          ClientVersion = input.ReadString();
          break;
        }
        case 26: {
          ClientId = input.ReadString();
          break;
        }
        case 34: {
          Apid = input.ReadString();
          break;
        }
        case 42: {
          PhoneImei = input.ReadString();
          break;
        }
        case 50: {
          From = input.ReadString();
          break;
        }
        case 58: {
          Cuid = input.ReadString();
          break;
        }
        case 64: {
          Timestamp = input.ReadInt64();
          break;
        }
        case 74: {
          Model = input.ReadString();
          break;
        }
        case 82: {
          BDUSS = input.ReadString();
          break;
        }
        case 90: {
          Tbs = input.ReadString();
          break;
        }
        case 96: {
          NetType = input.ReadInt32();
          break;
        }
        case 106: {
          SubappType = input.ReadString();
          break;
        }
        case 114: {
          PhoneNewimei = input.ReadString();
          break;
        }
        case 122: {
          Ka = input.ReadString();
          break;
        }
        case 130: {
          MApi = input.ReadString();
          break;
        }
        case 138: {
          MLogid = input.ReadString();
          break;
        }
        case 146: {
          MCost = input.ReadString();
          break;
        }
        case 154: {
          MResult = input.ReadString();
          break;
        }
        case 162: {
          MSizeU = input.ReadString();
          break;
        }
        case 170: {
          MSizeD = input.ReadString();
          break;
        }
        case 178: {
          Smallflow = input.ReadString();
          break;
        }
        case 186: {
          Sign = input.ReadString();
          break;
        }
        case 194: {
          Pversion = input.ReadString();
          break;
        }
        case 202: {
          OsVersion = input.ReadString();
          break;
        }
        case 210: {
          Brand = input.ReadString();
          break;
        }
        case 218: {
          BrandType = input.ReadString();
          break;
        }
        case 226: {
          LegoLibVersion = input.ReadString();
          break;
        }
        case 234: {
          Applist = input.ReadString();
          break;
        }
        case 242: {
          Stoken = input.ReadString();
          break;
        }
        case 250: {
          ZId = input.ReadString();
          break;
        }
        case 258: {
          CuidGalaxy2 = input.ReadString();
          break;
        }
        case 266: {
          CuidGid = input.ReadString();
          break;
        }
        case 274: {
          Oaid = input.ReadString();
          break;
        }
        case 282: {
          C3Aid = input.ReadString();
          break;
        }
        case 290: {
          SampleId = input.ReadString();
          break;
        }
        case 296: {
          ScrW = input.ReadInt32();
          break;
        }
        case 304: {
          ScrH = input.ReadInt32();
          break;
        }
        case 313: {
          ScrDip = input.ReadDouble();
          break;
        }
        case 320: {
          QType = input.ReadInt32();
          break;
        }
        case 328: {
          IsTeenager = input.ReadInt32();
          break;
        }
        case 338: {
          SdkVer = input.ReadString();
          break;
        }
        case 346: {
          FrameworkVer = input.ReadString();
          break;
        }
        case 354: {
          NawsGameVer = input.ReadString();
          break;
        }
        case 362: {
          Idfa = input.ReadString();
          break;
        }
        case 370: {
          Diac = input.ReadString();
          break;
        }
        case 392: {
          ActiveTimestamp = input.ReadInt64();
          break;
        }
        case 400: {
          FirstInstallTime = input.ReadInt64();
          break;
        }
        case 408: {
          LastUpdateTime = input.ReadInt64();
          break;
        }
        case 426: {
          EventDay = input.ReadString();
          break;
        }
        case 434: {
          AndroidId = input.ReadString();
          break;
        }
        case 440: {
          Cmode = input.ReadInt32();
          break;
        }
        case 450: {
          StartScheme = input.ReadString();
          break;
        }
        case 456: {
          StartType = input.ReadInt32();
          break;
        }
        case 466: {
          ShoubaiCuid = input.ReadString();
          break;
        }
        case 474: {
          Mac = input.ReadString();
          break;
        }
        case 482: {
          Idfv = input.ReadString();
          break;
        }
        case 490: {
          Extra = input.ReadString();
          break;
        }
        case 498: {
          UserAgent = input.ReadString();
          break;
        }
        case 504: {
          PersonalizedRecSwitch = input.ReadInt32();
          break;
        }
        case 514: {
          Iemi = input.ReadString();
          break;
        }
        case 522: {
          Iemiwen = input.ReadString();
          break;
        }
        case 530: {
          Cam = input.ReadString();
          break;
        }
        case 538: {
          Afdi = input.ReadString();
          break;
        }
        case 546: {
          DiDiordna = input.ReadString();
          break;
        }
        case 554: {
          Vfdi = input.ReadString();
          break;
        }
        case 562: {
          DeviceScore = input.ReadString();
          break;
        }
        case 568: {
          PureMode = input.ReadInt32();
          break;
        }
        case 576: {
          XcxMode = input.ReadInt32();
          break;
        }
        case 586: {
          Ledom = input.ReadString();
          break;
        }
        case 594: {
          Diao = input.ReadString();
          break;
        }
        case 602: {
          NoisrevSo = input.ReadString();
          break;
        }
        case 610: {
          Dnarb = input.ReadString();
          break;
        }
        case 618: {
          EpytDnarb = input.ReadString();
          break;
        }
        case 626: {
          WRcs = input.ReadString();
          break;
        }
        case 634: {
          HRcs = input.ReadString();
          break;
        }
        case 642: {
          PidRcs = input.ReadString();
          break;
        }
        case 648: {
          NeedDecrypt = input.ReadInt32();
          break;
        }
        case 656: {
          NeedCamDecrypt = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
